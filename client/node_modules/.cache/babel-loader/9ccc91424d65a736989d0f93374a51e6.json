{"ast":null,"code":"import _slicedToArray from \"C:\\\\chat app\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\chat app\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport './Chat.css';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nlet socket;\nconst ENDPOINT = 'localhost:5000';\n\nconst Chat = ({\n  location\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        room = _useState4[0],\n        setRoom = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        message = _useState6[0],\n        setMessage = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        messages = _useState8[0],\n        setMessages = _useState8[1];\n\n  useEffect(() => {\n    const _queryString$parse = queryString.parse(location.search),\n          name = _queryString$parse.name,\n          room = _queryString$parse.room;\n\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => {\n        setMessage('');\n      });\n    }\n  };\n\n  console.log(message, messages);\n  return React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(InfoBar, {\n    room: room,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(Input, {\n    message: message,\n    setMessage: setMessage,\n    sendMessage: setMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })));\n};\n\nexport default Chat;","map":{"version":3,"sources":["C:/chat app/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","InfoBar","Input","socket","ENDPOINT","Chat","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","parse","search","emit","error","alert","off","on","sendMessage","event","preventDefault","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,OAAO,YAAP;AAEA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,IAAIC,MAAJ;AAEA,MAAMC,QAAQ,GAAG,gBAAjB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA,oBACAT,QAAQ,CAAC,EAAD,CADR;AAAA;AAAA,QAClBU,IADkB;AAAA,QACXC,OADW;;AAAA,qBAEAX,QAAQ,CAAC,EAAD,CAFR;AAAA;AAAA,QAElBY,IAFkB;AAAA,QAEXC,OAFW;;AAAA,qBAGMb,QAAQ,CAAC,EAAD,CAHd;AAAA;AAAA,QAGlBc,OAHkB;AAAA,QAGRC,UAHQ;;AAAA,qBAIQf,QAAQ,CAAC,EAAD,CAJhB;AAAA;AAAA,QAIlBgB,QAJkB;AAAA,QAIPC,WAJO;;AAMzBhB,EAAAA,SAAS,CAAE,MAAI;AAAA,+BACWC,WAAW,CAACgB,KAAZ,CAAkBT,QAAQ,CAACU,MAA3B,CADX;AAAA,UACJT,IADI,sBACJA,IADI;AAAA,UACGE,IADH,sBACGA,IADH;;AAGXN,IAAAA,MAAM,GAAGH,EAAE,CAACI,QAAD,CAAX;AAEAI,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAN,IAAAA,MAAM,CAACc,IAAP,CAAY,MAAZ,EAAmB;AAACV,MAAAA,IAAD;AAAME,MAAAA;AAAN,KAAnB,EAAkCS,KAAD,IAAW;AACxC,UAAGA,KAAH,EACA;AACIC,QAAAA,KAAK,CAACD,KAAD,CAAL;AACH;AACJ,KALD;AAOA,WAAO,MAAM;AACTf,MAAAA,MAAM,CAACc,IAAP,CAAY,YAAZ;AAEAd,MAAAA,MAAM,CAACiB,GAAP;AACH,KAJD;AAMH,GArBQ,EAqBP,CAAChB,QAAD,EAAUE,QAAQ,CAACU,MAAnB,CArBO,CAAT;AAuBAlB,EAAAA,SAAS,CAAE,MAAI;AACXK,IAAAA,MAAM,CAACkB,EAAP,CAAU,SAAV,EAAsBV,OAAD,IAAY;AAC7BG,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAaF,OAAb,CAAD,CAAX;AACH,KAFD;AAGH,GAJQ,EAIN,CAACE,QAAD,CAJM,CAAT;;AAMA,QAAMS,WAAW,GAAIC,KAAD,IAAU;AAC1BA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAGb,OAAH,EAAW;AACPR,MAAAA,MAAM,CAACc,IAAP,CAAY,aAAZ,EAA4BN,OAA5B,EAAsC,MAAM;AACxCC,QAAAA,UAAU,CAAC,EAAD,CAAV;AACH,OAFD;AAGH;AACJ,GAPD;;AASAa,EAAAA,OAAO,CAACC,GAAR,CAAYf,OAAZ,EAAsBE,QAAtB;AAEA,SACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAIJ,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOA,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAIE,OAAlB;AAA2B,IAAA,UAAU,EAAIC,UAAzC;AAAqD,IAAA,WAAW,EAAIA,UAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPA,CADJ,CADJ;AAaH,CA3DD;;AA6DA,eAAeP,IAAf","sourcesContent":["import React , {useState, useEffect} from 'react';\r\nimport queryString from 'query-string';\r\nimport io from 'socket.io-client';\r\n\r\nimport './Chat.css'\r\n\r\nimport InfoBar from '../InfoBar/InfoBar';\r\nimport Input from '../Input/Input';\r\n\r\nlet socket;\r\n\r\nconst ENDPOINT = 'localhost:5000';\r\n\r\nconst Chat = ({location}) => {\r\n    const [name , setName] = useState('');\r\n    const [room , setRoom] = useState('');\r\n    const [message , setMessage] = useState('');\r\n    const [messages , setMessages] = useState([]);\r\n\r\n    useEffect( ()=>{\r\n        const {name , room} = queryString.parse(location.search);\r\n\r\n        socket = io(ENDPOINT);\r\n\r\n        setName(name);\r\n        setRoom(room);\r\n\r\n        socket.emit('join',{name,room} , (error) => {\r\n            if(error)\r\n            {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            socket.emit('disconnect');\r\n\r\n            socket.off();\r\n        }\r\n\r\n    },[ENDPOINT,location.search]);\r\n\r\n    useEffect( ()=>{\r\n        socket.on('message', (message) =>{\r\n            setMessages([...messages,message]);\r\n        } );\r\n    }, [messages]);\r\n\r\n    const sendMessage = (event) =>{\r\n        event.preventDefault();\r\n        if(message){\r\n            socket.emit('sendMessage' , message , () => {\r\n                setMessage('')\r\n            });\r\n        }\r\n    }\r\n\r\n    console.log(message , messages);\r\n\r\n    return(\r\n        <div className=\"outerContainer\">\r\n            <div className=\"container\">\r\n                <InfoBar room = {room}/>\r\n            {/*\r\n            <input value={message}\r\n            onChange={(event) => setMessage(event.target.value)}\r\n            onKeyPress={event => event.key === 'Enter'? sendMessage(event) : null} />\r\n            */}\r\n            <Input message = {message} setMessage = {setMessage} sendMessage = {setMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Chat;"]},"metadata":{},"sourceType":"module"}