{"ast":null,"code":"import _slicedToArray from \"C:\\\\chat app\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\chat app\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nlet socket;\nconst ENDPOINT = 'localhost:5000';\n\nconst Chat = ({\n  location\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        room = _useState4[0],\n        setRoom = _useState4[1];\n\n  useEffect(() => {\n    const _queryString$parse = queryString.parse(location.search),\n          name = _queryString$parse.name,\n          room = _queryString$parse.room;\n\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    });\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  return React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Chat\");\n};\n\nexport default Chat;","map":{"version":3,"sources":["C:/chat app/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","socket","ENDPOINT","Chat","location","name","setName","room","setRoom","parse","search","emit","off"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,IAAIC,MAAJ;AAEA,MAAMC,QAAQ,GAAG,gBAAjB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA,oBACAP,QAAQ,CAAC,EAAD,CADR;AAAA;AAAA,QAClBQ,IADkB;AAAA,QACXC,OADW;;AAAA,qBAEAT,QAAQ,CAAC,EAAD,CAFR;AAAA;AAAA,QAElBU,IAFkB;AAAA,QAEXC,OAFW;;AAIzBV,EAAAA,SAAS,CAAE,MAAI;AAAA,+BACWC,WAAW,CAACU,KAAZ,CAAkBL,QAAQ,CAACM,MAA3B,CADX;AAAA,UACJL,IADI,sBACJA,IADI;AAAA,UACGE,IADH,sBACGA,IADH;;AAGXN,IAAAA,MAAM,GAAGD,EAAE,CAACE,QAAD,CAAX;AAEAI,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAN,IAAAA,MAAM,CAACU,IAAP,CAAY,MAAZ,EAAmB;AAACN,MAAAA,IAAD;AAAME,MAAAA;AAAN,KAAnB;AAEA,WAAO,MAAM;AACTN,MAAAA,MAAM,CAACU,IAAP,CAAY,YAAZ;AAEAV,MAAAA,MAAM,CAACW,GAAP;AACH,KAJD;AAMH,GAhBQ,EAgBP,CAACV,QAAD,EAAUE,QAAQ,CAACM,MAAnB,CAhBO,CAAT;AAkBA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,CAzBD;;AA2BA,eAAeP,IAAf","sourcesContent":["import React , {useState, useEffect} from 'react';\r\nimport queryString from 'query-string';\r\nimport io from 'socket.io-client';\r\n\r\nlet socket;\r\n\r\nconst ENDPOINT = 'localhost:5000';\r\n\r\nconst Chat = ({location}) => {\r\n    const [name , setName] = useState('');\r\n    const [room , setRoom] = useState('');\r\n\r\n    useEffect( ()=>{\r\n        const {name , room} = queryString.parse(location.search);\r\n\r\n        socket = io(ENDPOINT);\r\n\r\n        setName(name);\r\n        setRoom(room);\r\n\r\n        socket.emit('join',{name,room});\r\n\r\n        return () => {\r\n            socket.emit('disconnect');\r\n\r\n            socket.off();\r\n        }\r\n\r\n    },[ENDPOINT,location.search])\r\n\r\n    return(\r\n        <h1>Chat</h1>\r\n    )\r\n};\r\n\r\nexport default Chat;"]},"metadata":{},"sourceType":"module"}